import { DateTime } from './node_modules/luxon/src/luxon.js';

const form = document.querySelector('form')
const showBooks = document.querySelector('#book-list')
const remove = document.querySelector('#btn')
const date = document.getElementById('date')
const addBook = document.getElementById('add-new-book')
const allBooks = document.getElementById('all-books')
const contact = document.getElementById('contact')
const contactPage = document.getElementById('contact-link')
const add = document.getElementById('add-link')
const list = document.getElementById('list-link')

console.log(DateTime.now().toLocaleString(DateTime.DATETIME_MED_WITH_SECONDS))

class BookCollection{
    constructor() {
        this.books = [];
    }

display(books) {

    showBooks.innerHTML = books.map((book, i) => {
        return `
        <li>
        <span>${book.name} by ${book.author}</span>
        <button id=${i} class="remove">remove</button> 
        </li>
        `
    }).join('')
}

loadData() {
    document.addEventListener('DOMContentLoaded', () => {
    this.books = JSON.parse(localStorage.getItem('books'))
    this.display(this.books)
    allBooks.classList.remove('hide')
})
}

setData(books) {
    localStorage.setItem('books', JSON.stringify(books))

}

getDate() {
    return date.innerHTML = DateTime.now().toLocaleString(DateTime.DATETIME_MED);
}
}
const newBook = new BookCollection()
console.log(newBook)
newBook.loadData()
newBook.getDate()

// let display = (books) => {
// }

// if(localStorage.getItem('books')) {
//     books = JSON.parse(localStorage.getItem('books'))
//     console.log(books)
//     display(books)
// }

// This would also get the data from local storage
// document.addEventListener('DOMContentLoaded', () => {
//     books = JSON.parse(localStorage.getItem('books'))
//     console.log(books)
//     display(books)
// })

showBooks.addEventListener('click', (e) => {
    let id = e.target.id
    if (e.target.classList.contains('remove')) {
        // This only removes the value from the ui not from the array
        // e.target.parentElement.remove()
        // Splice removes the value from the array but mutates the array in the process 
        newBook.books.splice(id, 1);
        newBook.display(newBook.books)
        newBook.setData(newBook.books)
        // console.log(books)
    }
    
})

form.addEventListener('submit', (e) => {
    e.preventDefault()
const book = {
    name : form.title.value,
    author : form.author.value,   
}
newBook.books.push(book)
newBook.display(newBook.books)
newBook.setData(newBook.books)
form.title.value = ''
form.author.value = ''
console.log(newBook.books)
})

list.addEventListener('click', () => {
    allBooks.classList.remove('hide')
    addBook.classList.add('hide')
    contact.classList.add('hide')
})

add.addEventListener('click', () => {
    allBooks.classList.add('hide')
    addBook.classList.remove('hide')
    contact.classList.add('hide')
})

contactPage.addEventListener('click', () => {
    contact.classList.remove('hide')
    allBooks.classList.add('hide')
    addBook.classList.add('hide')
})







// try again
// let display = (books) => {
//     books.map((book, i) => {
//            const li = document.createElement('li')
//            const span = document.createElement('span')
//            const button = document.createElement('button')
//            li.appendChild(span)
//            span.textContent = `${book.name} by ${book.author}`
//            button.setAttribute('id', `${i}`)
//            button.classList.add('remove')
//            button.textContent = 'remove'
//            span.appendChild(button)
//            showBooks.appendChild(li)
//        })
//    }











// const Book = function() {
//     this.booksArray = []
// }

// Book.prototype.add = function(name, author) {
//       let book = {name, author, i}
//     this.booksArray.push(book)
// }

// Book.prototype.display = function(name, author) {
//     const bookname = document.createElement('li')
//     const bookTitle = document.createElement('li')
//     const button = document.createElement('button')
//     bookname.textContent = name
//     bookTitle.textContent = author
//     button.textContent = 'remove'
//     button.setAttribute('id', 'btn')
//     showBooks.appendChild(bookname)
//     bookname.append(bookTitle)
//     bookTitle.append(button)
// }

// const newBook = new Book()
// console.log(newBook)


// form.addEventListener('submit', (e) => {
//     e.preventDefault()
//     console.log('click', form.title.value)
//     newBook.add(form.title.value, form.author.value, i++)
//     newBook.display(form.title.value, form.author.value)
//     console.log(remove)
// }) 

